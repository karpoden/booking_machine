version: '3.8'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: booking-backend-prod
    environment:
      - DATABASE_URL=file:./dev.db
      - NODE_ENV=production
    volumes:
      - backend-db:/app/prisma
    networks:
      - booking-network
    restart: unless-stopped

  bot-user:
    build:
      context: ./Bot_User
      dockerfile: Dockerfile
    container_name: booking-bot-user-prod
    environment:
      - USER_BOT_TOKEN=${USER_BOT_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
    depends_on:
      - backend
    networks:
      - booking-network
    restart: unless-stopped

  bot-admin:
    build:
      context: ./Bot_Admin
      dockerfile: Dockerfile
    container_name: booking-bot-admin-prod
    environment:
      - ADMIN_BOT_TOKEN=${ADMIN_BOT_TOKEN}
    depends_on:
      - backend
    networks:
      - booking-network
    restart: unless-stopped

  frontend:
    build:
      context: ./Frontend/restaurant-booking-twa
      dockerfile: Dockerfile
    container_name: booking-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - booking-network
    restart: unless-stopped

volumes:
  backend-db:

networks:
  booking-network:
    driver: bridge