ИСПРАВЛЕНИЯ ДЛЯ ОБНОВЛЕННОЙ NGINX КОНФИГУРАЦИИ:

1. ИСПРАВИТЬ ОБРЕЗАННЫЕ ЗАГОЛОВКИ:

Content-Security-Policy:
ЗАМЕНИТЬ: add_header Content-Security-Policy "default-src 'self'; script-s>
НА: add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; frame-ancestors https://web.telegram.org;" always;

Referrer-Policy:
ЗАМЕНИТЬ: add_header Referrer-Policy "strict-origin-when-cross-origin" alw>
НА: add_header Referrer-Policy "strict-origin-when-cross-origin" always;

Permissions-Policy:
ЗАМЕНИТЬ: add_header Permissions-Policy "geolocation=(), microphone=(), ca>
НА: add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

Strict-Transport-Security:
ЗАМЕНИТЬ: add_header Strict-Transport-Security "max-age=31536000; includeS>
НА: add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

2. ДОБАВИТЬ КЕШИРОВАНИЕ СТАТИЧЕСКИХ ФАЙЛОВ:

ДОБАВИТЬ ПЕРЕД location /api/:

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:5173;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

ИТОГОВАЯ ИСПРАВЛЕННАЯ КОНФИГУРАЦИЯ:

server {
    server_name appbookingmachine.ru;

    location / {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; frame-ancestors https://web.telegram.org;" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    }

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:5173;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://telegram.org; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; frame-ancestors https://web.telegram.org;" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/appbookingmachine.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appbookingmachine.ru/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    if ($host = appbookingmachine.ru) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name appbookingmachine.ru;
    return 404;
}